name: Build binaries for release
#on:
#  push:
#    branches:
#      - master
on:
  release:
    types: [created]
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            archive: tar.gz zip
          - target: aarch64-unknown-linux-gnu
            archive: tar.gz zip
          - target: aarch64-apple-darwin
            archive: tar.gz zip
          - target: x86_64-apple-darwin
            archive: zip
          - target: x86_64-pc-windows-msvc
            archive: zip
          - target: x86_64-pc-windows-gnu
            archive: zip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Get next version
#        uses: reecetech/version-increment@2023.9.3
#        id: version
#        with:
#          scheme: calver
#          increment: patch
#      - name: "Delete CurseForge restricted files"
#        env:
#          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
#        run: |
#          mkdir sArena_Updated2_by_sammers
#          cp -R Ace3 sArena_Updated2_by_sammers/
#          cp -R Layouts sArena_Updated2_by_sammers/
#          cp -R Modules sArena_Updated2_by_sammers/
#          cp Config.lua sArena_Updated2_by_sammers/
#          cp LICENSE.txt sArena_Updated2_by_sammers/
#          cp sArena_Updated2_by_sammers.toc sArena_Updated2_by_sammers/
#          cp sArena.lua sArena_Updated2_by_sammers/
#          cp sArena.xml sArena_Updated2_by_sammers/
#          zip -vr sArena_Updated2_by_sammers-${{ steps.version.outputs.version }}.zip sArena_Updated2_by_sammers/
#      - name: "Create Github Release"
#        uses: actions/create-release@v1
#        id: create_release
#        with:
#          draft: false
#          prerelease: false
#          release_name: "Release ${{ steps.version.outputs.version }}"
#          tag_name: "${{ steps.version.outputs.version }}"
#          body: "Relesing version ${{ steps.version.outputs.version }}"
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#      - name: "Upload sArena artifact to release"
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./sArena_Updated2_by_sammers-${{ steps.version.outputs.version }}.zip
#          asset_name: sArena_Updated2_by_sammers-${{ steps.version.outputs.version }}.zip
#          asset_content_type: application/zip